// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5124.PowerUp.subsystems;

import org.usfirst.frc5124.PowerUp.RobotMap;
import org.usfirst.frc5124.PowerUp.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDController;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.VictorSP;
import edu.wpi.first.wpilibj.smartdashboard.*;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Lift extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController motorOne = RobotMap.liftMotorOne;
    private final SpeedController motorTwo = RobotMap.liftMotorTwo;
    private final SpeedControllerGroup motorGroup = RobotMap.liftMotorGroup;
    private final Encoder encoder = RobotMap.liftEncoder;
    private final PIDController PID = RobotMap.liftPID;
    private final DigitalInput limitSwitchBottom = RobotMap.liftLimitSwitchBottom;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new LiftSubCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }
    
    public void setLiftPIDCoefficients (double p, double i, double d) {
    	PID.setPID(p, i, d);
    }
    
    public void setLiftPIDSetPoint (double setpoint) {
    	PID.setSetpoint(setpoint);
    }
    
    public int getLiftEncoder() {
    	return encoder.get();
    }
    
    public void setLiftSpeed (double power) {
    	motorGroup.set(power);
    }
    
    public double getLiftP() {
    	return PID.getP();
    }
    
    public double getLiftI() {
    	return PID.getI();
    }
    
    public double getLiftD() {
    	return PID.getD();
    }
    
    public double getLiftPIDResult() {
    	return PID.get();
    }
    
    public void initPIDRange() {
    	PID.setInputRange(-1, 1);
    	PID.setOutputRange(-1, 1);
    }
    
    public boolean getBottomLimitSwitch() {
    	return limitSwitchBottom.get();
    }
    
    public void zeroEncoder() {
    	encoder.reset();
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

